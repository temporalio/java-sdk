// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/api/enums/v1/command_type.proto

package io.temporal.api.enums.v1;

/**
 * <pre>
 * Whenever this list of command types is changed do change the function shouldBufferEvent in mutableStateBuilder.go to make sure to do the correct event ordering.
 * </pre>
 *
 * Protobuf enum {@code temporal.api.enums.v1.CommandType}
 */
public enum CommandType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>COMMAND_TYPE_UNSPECIFIED = 0;</code>
   */
  COMMAND_TYPE_UNSPECIFIED(0),
  /**
   * <code>COMMAND_TYPE_SCHEDULE_ACTIVITY_TASK = 1;</code>
   */
  COMMAND_TYPE_SCHEDULE_ACTIVITY_TASK(1),
  /**
   * <code>COMMAND_TYPE_REQUEST_CANCEL_ACTIVITY_TASK = 2;</code>
   */
  COMMAND_TYPE_REQUEST_CANCEL_ACTIVITY_TASK(2),
  /**
   * <code>COMMAND_TYPE_START_TIMER = 3;</code>
   */
  COMMAND_TYPE_START_TIMER(3),
  /**
   * <code>COMMAND_TYPE_COMPLETE_WORKFLOW_EXECUTION = 4;</code>
   */
  COMMAND_TYPE_COMPLETE_WORKFLOW_EXECUTION(4),
  /**
   * <code>COMMAND_TYPE_FAIL_WORKFLOW_EXECUTION = 5;</code>
   */
  COMMAND_TYPE_FAIL_WORKFLOW_EXECUTION(5),
  /**
   * <code>COMMAND_TYPE_CANCEL_TIMER = 6;</code>
   */
  COMMAND_TYPE_CANCEL_TIMER(6),
  /**
   * <code>COMMAND_TYPE_CANCEL_WORKFLOW_EXECUTION = 7;</code>
   */
  COMMAND_TYPE_CANCEL_WORKFLOW_EXECUTION(7),
  /**
   * <code>COMMAND_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION = 8;</code>
   */
  COMMAND_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION(8),
  /**
   * <code>COMMAND_TYPE_RECORD_MARKER = 9;</code>
   */
  COMMAND_TYPE_RECORD_MARKER(9),
  /**
   * <code>COMMAND_TYPE_CONTINUE_AS_NEW_WORKFLOW_EXECUTION = 10;</code>
   */
  COMMAND_TYPE_CONTINUE_AS_NEW_WORKFLOW_EXECUTION(10),
  /**
   * <code>COMMAND_TYPE_START_CHILD_WORKFLOW_EXECUTION = 11;</code>
   */
  COMMAND_TYPE_START_CHILD_WORKFLOW_EXECUTION(11),
  /**
   * <code>COMMAND_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION = 12;</code>
   */
  COMMAND_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION(12),
  /**
   * <code>COMMAND_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES = 13;</code>
   */
  COMMAND_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES(13),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>COMMAND_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int COMMAND_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>COMMAND_TYPE_SCHEDULE_ACTIVITY_TASK = 1;</code>
   */
  public static final int COMMAND_TYPE_SCHEDULE_ACTIVITY_TASK_VALUE = 1;
  /**
   * <code>COMMAND_TYPE_REQUEST_CANCEL_ACTIVITY_TASK = 2;</code>
   */
  public static final int COMMAND_TYPE_REQUEST_CANCEL_ACTIVITY_TASK_VALUE = 2;
  /**
   * <code>COMMAND_TYPE_START_TIMER = 3;</code>
   */
  public static final int COMMAND_TYPE_START_TIMER_VALUE = 3;
  /**
   * <code>COMMAND_TYPE_COMPLETE_WORKFLOW_EXECUTION = 4;</code>
   */
  public static final int COMMAND_TYPE_COMPLETE_WORKFLOW_EXECUTION_VALUE = 4;
  /**
   * <code>COMMAND_TYPE_FAIL_WORKFLOW_EXECUTION = 5;</code>
   */
  public static final int COMMAND_TYPE_FAIL_WORKFLOW_EXECUTION_VALUE = 5;
  /**
   * <code>COMMAND_TYPE_CANCEL_TIMER = 6;</code>
   */
  public static final int COMMAND_TYPE_CANCEL_TIMER_VALUE = 6;
  /**
   * <code>COMMAND_TYPE_CANCEL_WORKFLOW_EXECUTION = 7;</code>
   */
  public static final int COMMAND_TYPE_CANCEL_WORKFLOW_EXECUTION_VALUE = 7;
  /**
   * <code>COMMAND_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION = 8;</code>
   */
  public static final int COMMAND_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_VALUE = 8;
  /**
   * <code>COMMAND_TYPE_RECORD_MARKER = 9;</code>
   */
  public static final int COMMAND_TYPE_RECORD_MARKER_VALUE = 9;
  /**
   * <code>COMMAND_TYPE_CONTINUE_AS_NEW_WORKFLOW_EXECUTION = 10;</code>
   */
  public static final int COMMAND_TYPE_CONTINUE_AS_NEW_WORKFLOW_EXECUTION_VALUE = 10;
  /**
   * <code>COMMAND_TYPE_START_CHILD_WORKFLOW_EXECUTION = 11;</code>
   */
  public static final int COMMAND_TYPE_START_CHILD_WORKFLOW_EXECUTION_VALUE = 11;
  /**
   * <code>COMMAND_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION = 12;</code>
   */
  public static final int COMMAND_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_VALUE = 12;
  /**
   * <code>COMMAND_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES = 13;</code>
   */
  public static final int COMMAND_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES_VALUE = 13;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CommandType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CommandType forNumber(int value) {
    switch (value) {
      case 0: return COMMAND_TYPE_UNSPECIFIED;
      case 1: return COMMAND_TYPE_SCHEDULE_ACTIVITY_TASK;
      case 2: return COMMAND_TYPE_REQUEST_CANCEL_ACTIVITY_TASK;
      case 3: return COMMAND_TYPE_START_TIMER;
      case 4: return COMMAND_TYPE_COMPLETE_WORKFLOW_EXECUTION;
      case 5: return COMMAND_TYPE_FAIL_WORKFLOW_EXECUTION;
      case 6: return COMMAND_TYPE_CANCEL_TIMER;
      case 7: return COMMAND_TYPE_CANCEL_WORKFLOW_EXECUTION;
      case 8: return COMMAND_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION;
      case 9: return COMMAND_TYPE_RECORD_MARKER;
      case 10: return COMMAND_TYPE_CONTINUE_AS_NEW_WORKFLOW_EXECUTION;
      case 11: return COMMAND_TYPE_START_CHILD_WORKFLOW_EXECUTION;
      case 12: return COMMAND_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION;
      case 13: return COMMAND_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CommandType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
          public CommandType findValueByNumber(int number) {
            return CommandType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.temporal.api.enums.v1.CommandTypeProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final CommandType[] VALUES = values();

  public static CommandType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CommandType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:temporal.api.enums.v1.CommandType)
}

