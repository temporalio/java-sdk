// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/api/workflowservice/v1/request_response.proto

package io.temporal.api.workflowservice.v1;

/**
 * Protobuf type {@code temporal.api.workflowservice.v1.DescribeNamespaceResponse}
 */
public final class DescribeNamespaceResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:temporal.api.workflowservice.v1.DescribeNamespaceResponse)
    DescribeNamespaceResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DescribeNamespaceResponse.newBuilder() to construct.
  private DescribeNamespaceResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DescribeNamespaceResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DescribeNamespaceResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DescribeNamespaceResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.temporal.api.namespace.v1.NamespaceInfo.Builder subBuilder = null;
            if (namespaceInfo_ != null) {
              subBuilder = namespaceInfo_.toBuilder();
            }
            namespaceInfo_ = input.readMessage(io.temporal.api.namespace.v1.NamespaceInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(namespaceInfo_);
              namespaceInfo_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.temporal.api.namespace.v1.NamespaceConfig.Builder subBuilder = null;
            if (config_ != null) {
              subBuilder = config_.toBuilder();
            }
            config_ = input.readMessage(io.temporal.api.namespace.v1.NamespaceConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(config_);
              config_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.temporal.api.replication.v1.NamespaceReplicationConfig.Builder subBuilder = null;
            if (replicationConfig_ != null) {
              subBuilder = replicationConfig_.toBuilder();
            }
            replicationConfig_ = input.readMessage(io.temporal.api.replication.v1.NamespaceReplicationConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(replicationConfig_);
              replicationConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            failoverVersion_ = input.readInt64();
            break;
          }
          case 40: {

            isGlobalNamespace_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.temporal.api.workflowservice.v1.RequestResponseProto.internal_static_temporal_api_workflowservice_v1_DescribeNamespaceResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.temporal.api.workflowservice.v1.RequestResponseProto.internal_static_temporal_api_workflowservice_v1_DescribeNamespaceResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.class, io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.Builder.class);
  }

  public static final int NAMESPACE_INFO_FIELD_NUMBER = 1;
  private io.temporal.api.namespace.v1.NamespaceInfo namespaceInfo_;
  /**
   * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
   * @return Whether the namespaceInfo field is set.
   */
  @java.lang.Override
  public boolean hasNamespaceInfo() {
    return namespaceInfo_ != null;
  }
  /**
   * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
   * @return The namespaceInfo.
   */
  @java.lang.Override
  public io.temporal.api.namespace.v1.NamespaceInfo getNamespaceInfo() {
    return namespaceInfo_ == null ? io.temporal.api.namespace.v1.NamespaceInfo.getDefaultInstance() : namespaceInfo_;
  }
  /**
   * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
   */
  @java.lang.Override
  public io.temporal.api.namespace.v1.NamespaceInfoOrBuilder getNamespaceInfoOrBuilder() {
    return getNamespaceInfo();
  }

  public static final int CONFIG_FIELD_NUMBER = 2;
  private io.temporal.api.namespace.v1.NamespaceConfig config_;
  /**
   * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
   * @return Whether the config field is set.
   */
  @java.lang.Override
  public boolean hasConfig() {
    return config_ != null;
  }
  /**
   * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
   * @return The config.
   */
  @java.lang.Override
  public io.temporal.api.namespace.v1.NamespaceConfig getConfig() {
    return config_ == null ? io.temporal.api.namespace.v1.NamespaceConfig.getDefaultInstance() : config_;
  }
  /**
   * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
   */
  @java.lang.Override
  public io.temporal.api.namespace.v1.NamespaceConfigOrBuilder getConfigOrBuilder() {
    return getConfig();
  }

  public static final int REPLICATION_CONFIG_FIELD_NUMBER = 3;
  private io.temporal.api.replication.v1.NamespaceReplicationConfig replicationConfig_;
  /**
   * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
   * @return Whether the replicationConfig field is set.
   */
  @java.lang.Override
  public boolean hasReplicationConfig() {
    return replicationConfig_ != null;
  }
  /**
   * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
   * @return The replicationConfig.
   */
  @java.lang.Override
  public io.temporal.api.replication.v1.NamespaceReplicationConfig getReplicationConfig() {
    return replicationConfig_ == null ? io.temporal.api.replication.v1.NamespaceReplicationConfig.getDefaultInstance() : replicationConfig_;
  }
  /**
   * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
   */
  @java.lang.Override
  public io.temporal.api.replication.v1.NamespaceReplicationConfigOrBuilder getReplicationConfigOrBuilder() {
    return getReplicationConfig();
  }

  public static final int FAILOVER_VERSION_FIELD_NUMBER = 4;
  private long failoverVersion_;
  /**
   * <code>int64 failover_version = 4;</code>
   * @return The failoverVersion.
   */
  @java.lang.Override
  public long getFailoverVersion() {
    return failoverVersion_;
  }

  public static final int IS_GLOBAL_NAMESPACE_FIELD_NUMBER = 5;
  private boolean isGlobalNamespace_;
  /**
   * <code>bool is_global_namespace = 5;</code>
   * @return The isGlobalNamespace.
   */
  @java.lang.Override
  public boolean getIsGlobalNamespace() {
    return isGlobalNamespace_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (namespaceInfo_ != null) {
      output.writeMessage(1, getNamespaceInfo());
    }
    if (config_ != null) {
      output.writeMessage(2, getConfig());
    }
    if (replicationConfig_ != null) {
      output.writeMessage(3, getReplicationConfig());
    }
    if (failoverVersion_ != 0L) {
      output.writeInt64(4, failoverVersion_);
    }
    if (isGlobalNamespace_ != false) {
      output.writeBool(5, isGlobalNamespace_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (namespaceInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getNamespaceInfo());
    }
    if (config_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConfig());
    }
    if (replicationConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getReplicationConfig());
    }
    if (failoverVersion_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, failoverVersion_);
    }
    if (isGlobalNamespace_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, isGlobalNamespace_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.temporal.api.workflowservice.v1.DescribeNamespaceResponse)) {
      return super.equals(obj);
    }
    io.temporal.api.workflowservice.v1.DescribeNamespaceResponse other = (io.temporal.api.workflowservice.v1.DescribeNamespaceResponse) obj;

    if (hasNamespaceInfo() != other.hasNamespaceInfo()) return false;
    if (hasNamespaceInfo()) {
      if (!getNamespaceInfo()
          .equals(other.getNamespaceInfo())) return false;
    }
    if (hasConfig() != other.hasConfig()) return false;
    if (hasConfig()) {
      if (!getConfig()
          .equals(other.getConfig())) return false;
    }
    if (hasReplicationConfig() != other.hasReplicationConfig()) return false;
    if (hasReplicationConfig()) {
      if (!getReplicationConfig()
          .equals(other.getReplicationConfig())) return false;
    }
    if (getFailoverVersion()
        != other.getFailoverVersion()) return false;
    if (getIsGlobalNamespace()
        != other.getIsGlobalNamespace()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasNamespaceInfo()) {
      hash = (37 * hash) + NAMESPACE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNamespaceInfo().hashCode();
    }
    if (hasConfig()) {
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig().hashCode();
    }
    if (hasReplicationConfig()) {
      hash = (37 * hash) + REPLICATION_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getReplicationConfig().hashCode();
    }
    hash = (37 * hash) + FAILOVER_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFailoverVersion());
    hash = (37 * hash) + IS_GLOBAL_NAMESPACE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsGlobalNamespace());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.temporal.api.workflowservice.v1.DescribeNamespaceResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code temporal.api.workflowservice.v1.DescribeNamespaceResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:temporal.api.workflowservice.v1.DescribeNamespaceResponse)
      io.temporal.api.workflowservice.v1.DescribeNamespaceResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.temporal.api.workflowservice.v1.RequestResponseProto.internal_static_temporal_api_workflowservice_v1_DescribeNamespaceResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.temporal.api.workflowservice.v1.RequestResponseProto.internal_static_temporal_api_workflowservice_v1_DescribeNamespaceResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.class, io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.Builder.class);
    }

    // Construct using io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (namespaceInfoBuilder_ == null) {
        namespaceInfo_ = null;
      } else {
        namespaceInfo_ = null;
        namespaceInfoBuilder_ = null;
      }
      if (configBuilder_ == null) {
        config_ = null;
      } else {
        config_ = null;
        configBuilder_ = null;
      }
      if (replicationConfigBuilder_ == null) {
        replicationConfig_ = null;
      } else {
        replicationConfig_ = null;
        replicationConfigBuilder_ = null;
      }
      failoverVersion_ = 0L;

      isGlobalNamespace_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.temporal.api.workflowservice.v1.RequestResponseProto.internal_static_temporal_api_workflowservice_v1_DescribeNamespaceResponse_descriptor;
    }

    @java.lang.Override
    public io.temporal.api.workflowservice.v1.DescribeNamespaceResponse getDefaultInstanceForType() {
      return io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.getDefaultInstance();
    }

    @java.lang.Override
    public io.temporal.api.workflowservice.v1.DescribeNamespaceResponse build() {
      io.temporal.api.workflowservice.v1.DescribeNamespaceResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.temporal.api.workflowservice.v1.DescribeNamespaceResponse buildPartial() {
      io.temporal.api.workflowservice.v1.DescribeNamespaceResponse result = new io.temporal.api.workflowservice.v1.DescribeNamespaceResponse(this);
      if (namespaceInfoBuilder_ == null) {
        result.namespaceInfo_ = namespaceInfo_;
      } else {
        result.namespaceInfo_ = namespaceInfoBuilder_.build();
      }
      if (configBuilder_ == null) {
        result.config_ = config_;
      } else {
        result.config_ = configBuilder_.build();
      }
      if (replicationConfigBuilder_ == null) {
        result.replicationConfig_ = replicationConfig_;
      } else {
        result.replicationConfig_ = replicationConfigBuilder_.build();
      }
      result.failoverVersion_ = failoverVersion_;
      result.isGlobalNamespace_ = isGlobalNamespace_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.temporal.api.workflowservice.v1.DescribeNamespaceResponse) {
        return mergeFrom((io.temporal.api.workflowservice.v1.DescribeNamespaceResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.temporal.api.workflowservice.v1.DescribeNamespaceResponse other) {
      if (other == io.temporal.api.workflowservice.v1.DescribeNamespaceResponse.getDefaultInstance()) return this;
      if (other.hasNamespaceInfo()) {
        mergeNamespaceInfo(other.getNamespaceInfo());
      }
      if (other.hasConfig()) {
        mergeConfig(other.getConfig());
      }
      if (other.hasReplicationConfig()) {
        mergeReplicationConfig(other.getReplicationConfig());
      }
      if (other.getFailoverVersion() != 0L) {
        setFailoverVersion(other.getFailoverVersion());
      }
      if (other.getIsGlobalNamespace() != false) {
        setIsGlobalNamespace(other.getIsGlobalNamespace());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.temporal.api.workflowservice.v1.DescribeNamespaceResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.temporal.api.workflowservice.v1.DescribeNamespaceResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.temporal.api.namespace.v1.NamespaceInfo namespaceInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.temporal.api.namespace.v1.NamespaceInfo, io.temporal.api.namespace.v1.NamespaceInfo.Builder, io.temporal.api.namespace.v1.NamespaceInfoOrBuilder> namespaceInfoBuilder_;
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     * @return Whether the namespaceInfo field is set.
     */
    public boolean hasNamespaceInfo() {
      return namespaceInfoBuilder_ != null || namespaceInfo_ != null;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     * @return The namespaceInfo.
     */
    public io.temporal.api.namespace.v1.NamespaceInfo getNamespaceInfo() {
      if (namespaceInfoBuilder_ == null) {
        return namespaceInfo_ == null ? io.temporal.api.namespace.v1.NamespaceInfo.getDefaultInstance() : namespaceInfo_;
      } else {
        return namespaceInfoBuilder_.getMessage();
      }
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    public Builder setNamespaceInfo(io.temporal.api.namespace.v1.NamespaceInfo value) {
      if (namespaceInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        namespaceInfo_ = value;
        onChanged();
      } else {
        namespaceInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    public Builder setNamespaceInfo(
        io.temporal.api.namespace.v1.NamespaceInfo.Builder builderForValue) {
      if (namespaceInfoBuilder_ == null) {
        namespaceInfo_ = builderForValue.build();
        onChanged();
      } else {
        namespaceInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    public Builder mergeNamespaceInfo(io.temporal.api.namespace.v1.NamespaceInfo value) {
      if (namespaceInfoBuilder_ == null) {
        if (namespaceInfo_ != null) {
          namespaceInfo_ =
            io.temporal.api.namespace.v1.NamespaceInfo.newBuilder(namespaceInfo_).mergeFrom(value).buildPartial();
        } else {
          namespaceInfo_ = value;
        }
        onChanged();
      } else {
        namespaceInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    public Builder clearNamespaceInfo() {
      if (namespaceInfoBuilder_ == null) {
        namespaceInfo_ = null;
        onChanged();
      } else {
        namespaceInfo_ = null;
        namespaceInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    public io.temporal.api.namespace.v1.NamespaceInfo.Builder getNamespaceInfoBuilder() {
      
      onChanged();
      return getNamespaceInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    public io.temporal.api.namespace.v1.NamespaceInfoOrBuilder getNamespaceInfoOrBuilder() {
      if (namespaceInfoBuilder_ != null) {
        return namespaceInfoBuilder_.getMessageOrBuilder();
      } else {
        return namespaceInfo_ == null ?
            io.temporal.api.namespace.v1.NamespaceInfo.getDefaultInstance() : namespaceInfo_;
      }
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.temporal.api.namespace.v1.NamespaceInfo, io.temporal.api.namespace.v1.NamespaceInfo.Builder, io.temporal.api.namespace.v1.NamespaceInfoOrBuilder> 
        getNamespaceInfoFieldBuilder() {
      if (namespaceInfoBuilder_ == null) {
        namespaceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.temporal.api.namespace.v1.NamespaceInfo, io.temporal.api.namespace.v1.NamespaceInfo.Builder, io.temporal.api.namespace.v1.NamespaceInfoOrBuilder>(
                getNamespaceInfo(),
                getParentForChildren(),
                isClean());
        namespaceInfo_ = null;
      }
      return namespaceInfoBuilder_;
    }

    private io.temporal.api.namespace.v1.NamespaceConfig config_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.temporal.api.namespace.v1.NamespaceConfig, io.temporal.api.namespace.v1.NamespaceConfig.Builder, io.temporal.api.namespace.v1.NamespaceConfigOrBuilder> configBuilder_;
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     * @return Whether the config field is set.
     */
    public boolean hasConfig() {
      return configBuilder_ != null || config_ != null;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     * @return The config.
     */
    public io.temporal.api.namespace.v1.NamespaceConfig getConfig() {
      if (configBuilder_ == null) {
        return config_ == null ? io.temporal.api.namespace.v1.NamespaceConfig.getDefaultInstance() : config_;
      } else {
        return configBuilder_.getMessage();
      }
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    public Builder setConfig(io.temporal.api.namespace.v1.NamespaceConfig value) {
      if (configBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        config_ = value;
        onChanged();
      } else {
        configBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    public Builder setConfig(
        io.temporal.api.namespace.v1.NamespaceConfig.Builder builderForValue) {
      if (configBuilder_ == null) {
        config_ = builderForValue.build();
        onChanged();
      } else {
        configBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    public Builder mergeConfig(io.temporal.api.namespace.v1.NamespaceConfig value) {
      if (configBuilder_ == null) {
        if (config_ != null) {
          config_ =
            io.temporal.api.namespace.v1.NamespaceConfig.newBuilder(config_).mergeFrom(value).buildPartial();
        } else {
          config_ = value;
        }
        onChanged();
      } else {
        configBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    public Builder clearConfig() {
      if (configBuilder_ == null) {
        config_ = null;
        onChanged();
      } else {
        config_ = null;
        configBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    public io.temporal.api.namespace.v1.NamespaceConfig.Builder getConfigBuilder() {
      
      onChanged();
      return getConfigFieldBuilder().getBuilder();
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    public io.temporal.api.namespace.v1.NamespaceConfigOrBuilder getConfigOrBuilder() {
      if (configBuilder_ != null) {
        return configBuilder_.getMessageOrBuilder();
      } else {
        return config_ == null ?
            io.temporal.api.namespace.v1.NamespaceConfig.getDefaultInstance() : config_;
      }
    }
    /**
     * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.temporal.api.namespace.v1.NamespaceConfig, io.temporal.api.namespace.v1.NamespaceConfig.Builder, io.temporal.api.namespace.v1.NamespaceConfigOrBuilder> 
        getConfigFieldBuilder() {
      if (configBuilder_ == null) {
        configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.temporal.api.namespace.v1.NamespaceConfig, io.temporal.api.namespace.v1.NamespaceConfig.Builder, io.temporal.api.namespace.v1.NamespaceConfigOrBuilder>(
                getConfig(),
                getParentForChildren(),
                isClean());
        config_ = null;
      }
      return configBuilder_;
    }

    private io.temporal.api.replication.v1.NamespaceReplicationConfig replicationConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.temporal.api.replication.v1.NamespaceReplicationConfig, io.temporal.api.replication.v1.NamespaceReplicationConfig.Builder, io.temporal.api.replication.v1.NamespaceReplicationConfigOrBuilder> replicationConfigBuilder_;
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     * @return Whether the replicationConfig field is set.
     */
    public boolean hasReplicationConfig() {
      return replicationConfigBuilder_ != null || replicationConfig_ != null;
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     * @return The replicationConfig.
     */
    public io.temporal.api.replication.v1.NamespaceReplicationConfig getReplicationConfig() {
      if (replicationConfigBuilder_ == null) {
        return replicationConfig_ == null ? io.temporal.api.replication.v1.NamespaceReplicationConfig.getDefaultInstance() : replicationConfig_;
      } else {
        return replicationConfigBuilder_.getMessage();
      }
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    public Builder setReplicationConfig(io.temporal.api.replication.v1.NamespaceReplicationConfig value) {
      if (replicationConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        replicationConfig_ = value;
        onChanged();
      } else {
        replicationConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    public Builder setReplicationConfig(
        io.temporal.api.replication.v1.NamespaceReplicationConfig.Builder builderForValue) {
      if (replicationConfigBuilder_ == null) {
        replicationConfig_ = builderForValue.build();
        onChanged();
      } else {
        replicationConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    public Builder mergeReplicationConfig(io.temporal.api.replication.v1.NamespaceReplicationConfig value) {
      if (replicationConfigBuilder_ == null) {
        if (replicationConfig_ != null) {
          replicationConfig_ =
            io.temporal.api.replication.v1.NamespaceReplicationConfig.newBuilder(replicationConfig_).mergeFrom(value).buildPartial();
        } else {
          replicationConfig_ = value;
        }
        onChanged();
      } else {
        replicationConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    public Builder clearReplicationConfig() {
      if (replicationConfigBuilder_ == null) {
        replicationConfig_ = null;
        onChanged();
      } else {
        replicationConfig_ = null;
        replicationConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    public io.temporal.api.replication.v1.NamespaceReplicationConfig.Builder getReplicationConfigBuilder() {
      
      onChanged();
      return getReplicationConfigFieldBuilder().getBuilder();
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    public io.temporal.api.replication.v1.NamespaceReplicationConfigOrBuilder getReplicationConfigOrBuilder() {
      if (replicationConfigBuilder_ != null) {
        return replicationConfigBuilder_.getMessageOrBuilder();
      } else {
        return replicationConfig_ == null ?
            io.temporal.api.replication.v1.NamespaceReplicationConfig.getDefaultInstance() : replicationConfig_;
      }
    }
    /**
     * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.temporal.api.replication.v1.NamespaceReplicationConfig, io.temporal.api.replication.v1.NamespaceReplicationConfig.Builder, io.temporal.api.replication.v1.NamespaceReplicationConfigOrBuilder> 
        getReplicationConfigFieldBuilder() {
      if (replicationConfigBuilder_ == null) {
        replicationConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.temporal.api.replication.v1.NamespaceReplicationConfig, io.temporal.api.replication.v1.NamespaceReplicationConfig.Builder, io.temporal.api.replication.v1.NamespaceReplicationConfigOrBuilder>(
                getReplicationConfig(),
                getParentForChildren(),
                isClean());
        replicationConfig_ = null;
      }
      return replicationConfigBuilder_;
    }

    private long failoverVersion_ ;
    /**
     * <code>int64 failover_version = 4;</code>
     * @return The failoverVersion.
     */
    @java.lang.Override
    public long getFailoverVersion() {
      return failoverVersion_;
    }
    /**
     * <code>int64 failover_version = 4;</code>
     * @param value The failoverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setFailoverVersion(long value) {
      
      failoverVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 failover_version = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFailoverVersion() {
      
      failoverVersion_ = 0L;
      onChanged();
      return this;
    }

    private boolean isGlobalNamespace_ ;
    /**
     * <code>bool is_global_namespace = 5;</code>
     * @return The isGlobalNamespace.
     */
    @java.lang.Override
    public boolean getIsGlobalNamespace() {
      return isGlobalNamespace_;
    }
    /**
     * <code>bool is_global_namespace = 5;</code>
     * @param value The isGlobalNamespace to set.
     * @return This builder for chaining.
     */
    public Builder setIsGlobalNamespace(boolean value) {
      
      isGlobalNamespace_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_global_namespace = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsGlobalNamespace() {
      
      isGlobalNamespace_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:temporal.api.workflowservice.v1.DescribeNamespaceResponse)
  }

  // @@protoc_insertion_point(class_scope:temporal.api.workflowservice.v1.DescribeNamespaceResponse)
  private static final io.temporal.api.workflowservice.v1.DescribeNamespaceResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.temporal.api.workflowservice.v1.DescribeNamespaceResponse();
  }

  public static io.temporal.api.workflowservice.v1.DescribeNamespaceResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DescribeNamespaceResponse>
      PARSER = new com.google.protobuf.AbstractParser<DescribeNamespaceResponse>() {
    @java.lang.Override
    public DescribeNamespaceResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DescribeNamespaceResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DescribeNamespaceResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DescribeNamespaceResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.temporal.api.workflowservice.v1.DescribeNamespaceResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

