// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/api/workflowservice/v1/service.proto

package io.temporal.api.workflowservice.v1;

public final class ServiceProto {
  private ServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-temporal/api/workflowservice/v1/servic" +
      "e.proto\022\037temporal.api.workflowservice.v1" +
      "\0326temporal/api/workflowservice/v1/reques" +
      "t_response.proto2\2660\n\017WorkflowService\022\214\001\n" +
      "\021RegisterNamespace\0229.temporal.api.workfl" +
      "owservice.v1.RegisterNamespaceRequest\032:." +
      "temporal.api.workflowservice.v1.Register" +
      "NamespaceResponse\"\000\022\214\001\n\021DescribeNamespac" +
      "e\0229.temporal.api.workflowservice.v1.Desc" +
      "ribeNamespaceRequest\032:.temporal.api.work" +
      "flowservice.v1.DescribeNamespaceResponse" +
      "\"\000\022\203\001\n\016ListNamespaces\0226.temporal.api.wor" +
      "kflowservice.v1.ListNamespacesRequest\0327." +
      "temporal.api.workflowservice.v1.ListName" +
      "spacesResponse\"\000\022\206\001\n\017UpdateNamespace\0227.t" +
      "emporal.api.workflowservice.v1.UpdateNam" +
      "espaceRequest\0328.temporal.api.workflowser" +
      "vice.v1.UpdateNamespaceResponse\"\000\022\217\001\n\022De" +
      "precateNamespace\022:.temporal.api.workflow" +
      "service.v1.DeprecateNamespaceRequest\032;.t" +
      "emporal.api.workflowservice.v1.Deprecate" +
      "NamespaceResponse\"\000\022\233\001\n\026StartWorkflowExe" +
      "cution\022>.temporal.api.workflowservice.v1" +
      ".StartWorkflowExecutionRequest\032?.tempora" +
      "l.api.workflowservice.v1.StartWorkflowEx" +
      "ecutionResponse\"\000\022\252\001\n\033GetWorkflowExecuti" +
      "onHistory\022C.temporal.api.workflowservice" +
      ".v1.GetWorkflowExecutionHistoryRequest\032D" +
      ".temporal.api.workflowservice.v1.GetWork" +
      "flowExecutionHistoryResponse\"\000\022\230\001\n\025PollW" +
      "orkflowTaskQueue\022=.temporal.api.workflow" +
      "service.v1.PollWorkflowTaskQueueRequest\032" +
      ">.temporal.api.workflowservice.v1.PollWo" +
      "rkflowTaskQueueResponse\"\000\022\255\001\n\034RespondWor" +
      "kflowTaskCompleted\022D.temporal.api.workfl" +
      "owservice.v1.RespondWorkflowTaskComplete" +
      "dRequest\032E.temporal.api.workflowservice." +
      "v1.RespondWorkflowTaskCompletedResponse\"" +
      "\000\022\244\001\n\031RespondWorkflowTaskFailed\022A.tempor" +
      "al.api.workflowservice.v1.RespondWorkflo" +
      "wTaskFailedRequest\032B.temporal.api.workfl" +
      "owservice.v1.RespondWorkflowTaskFailedRe" +
      "sponse\"\000\022\230\001\n\025PollActivityTaskQueue\022=.tem" +
      "poral.api.workflowservice.v1.PollActivit" +
      "yTaskQueueRequest\032>.temporal.api.workflo" +
      "wservice.v1.PollActivityTaskQueueRespons" +
      "e\"\000\022\252\001\n\033RecordActivityTaskHeartbeat\022C.te" +
      "mporal.api.workflowservice.v1.RecordActi" +
      "vityTaskHeartbeatRequest\032D.temporal.api." +
      "workflowservice.v1.RecordActivityTaskHea" +
      "rtbeatResponse\"\000\022\266\001\n\037RecordActivityTaskH" +
      "eartbeatById\022G.temporal.api.workflowserv" +
      "ice.v1.RecordActivityTaskHeartbeatByIdRe" +
      "quest\032H.temporal.api.workflowservice.v1." +
      "RecordActivityTaskHeartbeatByIdResponse\"" +
      "\000\022\255\001\n\034RespondActivityTaskCompleted\022D.tem" +
      "poral.api.workflowservice.v1.RespondActi" +
      "vityTaskCompletedRequest\032E.temporal.api." +
      "workflowservice.v1.RespondActivityTaskCo" +
      "mpletedResponse\"\000\022\271\001\n RespondActivityTas" +
      "kCompletedById\022H.temporal.api.workflowse" +
      "rvice.v1.RespondActivityTaskCompletedByI" +
      "dRequest\032I.temporal.api.workflowservice." +
      "v1.RespondActivityTaskCompletedByIdRespo" +
      "nse\"\000\022\244\001\n\031RespondActivityTaskFailed\022A.te" +
      "mporal.api.workflowservice.v1.RespondAct" +
      "ivityTaskFailedRequest\032B.temporal.api.wo" +
      "rkflowservice.v1.RespondActivityTaskFail" +
      "edResponse\"\000\022\260\001\n\035RespondActivityTaskFail" +
      "edById\022E.temporal.api.workflowservice.v1" +
      ".RespondActivityTaskFailedByIdRequest\032F." +
      "temporal.api.workflowservice.v1.RespondA" +
      "ctivityTaskFailedByIdResponse\"\000\022\252\001\n\033Resp" +
      "ondActivityTaskCanceled\022C.temporal.api.w" +
      "orkflowservice.v1.RespondActivityTaskCan" +
      "celedRequest\032D.temporal.api.workflowserv" +
      "ice.v1.RespondActivityTaskCanceledRespon" +
      "se\"\000\022\266\001\n\037RespondActivityTaskCanceledById" +
      "\022G.temporal.api.workflowservice.v1.Respo" +
      "ndActivityTaskCanceledByIdRequest\032H.temp" +
      "oral.api.workflowservice.v1.RespondActiv" +
      "ityTaskCanceledByIdResponse\"\000\022\263\001\n\036Reques" +
      "tCancelWorkflowExecution\022F.temporal.api." +
      "workflowservice.v1.RequestCancelWorkflow" +
      "ExecutionRequest\032G.temporal.api.workflow" +
      "service.v1.RequestCancelWorkflowExecutio" +
      "nResponse\"\000\022\236\001\n\027SignalWorkflowExecution\022" +
      "?.temporal.api.workflowservice.v1.Signal" +
      "WorkflowExecutionRequest\032@.temporal.api." +
      "workflowservice.v1.SignalWorkflowExecuti" +
      "onResponse\"\000\022\271\001\n SignalWithStartWorkflow" +
      "Execution\022H.temporal.api.workflowservice" +
      ".v1.SignalWithStartWorkflowExecutionRequ" +
      "est\032I.temporal.api.workflowservice.v1.Si" +
      "gnalWithStartWorkflowExecutionResponse\"\000" +
      "\022\233\001\n\026ResetWorkflowExecution\022>.temporal.a" +
      "pi.workflowservice.v1.ResetWorkflowExecu" +
      "tionRequest\032?.temporal.api.workflowservi" +
      "ce.v1.ResetWorkflowExecutionResponse\"\000\022\247" +
      "\001\n\032TerminateWorkflowExecution\022B.temporal" +
      ".api.workflowservice.v1.TerminateWorkflo" +
      "wExecutionRequest\032C.temporal.api.workflo" +
      "wservice.v1.TerminateWorkflowExecutionRe" +
      "sponse\"\000\022\247\001\n\032ListOpenWorkflowExecutions\022" +
      "B.temporal.api.workflowservice.v1.ListOp" +
      "enWorkflowExecutionsRequest\032C.temporal.a" +
      "pi.workflowservice.v1.ListOpenWorkflowEx" +
      "ecutionsResponse\"\000\022\255\001\n\034ListClosedWorkflo" +
      "wExecutions\022D.temporal.api.workflowservi" +
      "ce.v1.ListClosedWorkflowExecutionsReques" +
      "t\032E.temporal.api.workflowservice.v1.List" +
      "ClosedWorkflowExecutionsResponse\"\000\022\233\001\n\026L" +
      "istWorkflowExecutions\022>.temporal.api.wor" +
      "kflowservice.v1.ListWorkflowExecutionsRe" +
      "quest\032?.temporal.api.workflowservice.v1." +
      "ListWorkflowExecutionsResponse\"\000\022\263\001\n\036Lis" +
      "tArchivedWorkflowExecutions\022F.temporal.a" +
      "pi.workflowservice.v1.ListArchivedWorkfl" +
      "owExecutionsRequest\032G.temporal.api.workf" +
      "lowservice.v1.ListArchivedWorkflowExecut" +
      "ionsResponse\"\000\022\233\001\n\026ScanWorkflowExecution" +
      "s\022>.temporal.api.workflowservice.v1.Scan" +
      "WorkflowExecutionsRequest\032?.temporal.api" +
      ".workflowservice.v1.ScanWorkflowExecutio" +
      "nsResponse\"\000\022\236\001\n\027CountWorkflowExecutions" +
      "\022?.temporal.api.workflowservice.v1.Count" +
      "WorkflowExecutionsRequest\032@.temporal.api" +
      ".workflowservice.v1.CountWorkflowExecuti" +
      "onsResponse\"\000\022\222\001\n\023GetSearchAttributes\022;." +
      "temporal.api.workflowservice.v1.GetSearc" +
      "hAttributesRequest\032<.temporal.api.workfl" +
      "owservice.v1.GetSearchAttributesResponse" +
      "\"\000\022\244\001\n\031RespondQueryTaskCompleted\022A.tempo" +
      "ral.api.workflowservice.v1.RespondQueryT" +
      "askCompletedRequest\032B.temporal.api.workf" +
      "lowservice.v1.RespondQueryTaskCompletedR" +
      "esponse\"\000\022\225\001\n\024ResetStickyTaskQueue\022<.tem" +
      "poral.api.workflowservice.v1.ResetSticky" +
      "TaskQueueRequest\032=.temporal.api.workflow" +
      "service.v1.ResetStickyTaskQueueResponse\"" +
      "\000\022\200\001\n\rQueryWorkflow\0225.temporal.api.workf" +
      "lowservice.v1.QueryWorkflowRequest\0326.tem" +
      "poral.api.workflowservice.v1.QueryWorkfl" +
      "owResponse\"\000\022\244\001\n\031DescribeWorkflowExecuti" +
      "on\022A.temporal.api.workflowservice.v1.Des" +
      "cribeWorkflowExecutionRequest\032B.temporal" +
      ".api.workflowservice.v1.DescribeWorkflow" +
      "ExecutionResponse\"\000\022\214\001\n\021DescribeTaskQueu" +
      "e\0229.temporal.api.workflowservice.v1.Desc" +
      "ribeTaskQueueRequest\032:.temporal.api.work" +
      "flowservice.v1.DescribeTaskQueueResponse" +
      "\"\000\022\203\001\n\016GetClusterInfo\0226.temporal.api.wor" +
      "kflowservice.v1.GetClusterInfoRequest\0327." +
      "temporal.api.workflowservice.v1.GetClust" +
      "erInfoResponse\"\000\022\236\001\n\027ListTaskQueuePartit" +
      "ions\022?.temporal.api.workflowservice.v1.L" +
      "istTaskQueuePartitionsRequest\032@.temporal" +
      ".api.workflowservice.v1.ListTaskQueuePar" +
      "titionsResponse\"\000B\220\001\n\"io.temporal.api.wo" +
      "rkflowservice.v1B\014ServiceProtoP\001Z5go.tem" +
      "poral.io/api/workflowservice/v1;workflow" +
      "service\352\002\"Temporal::Api::WorkflowService" +
      "::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.temporal.api.workflowservice.v1.RequestResponseProto.getDescriptor(),
        });
    io.temporal.api.workflowservice.v1.RequestResponseProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
