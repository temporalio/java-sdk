// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporal/api/workflowservice/v1/request_response.proto

package io.temporal.api.workflowservice.v1;

public interface UpdateNamespaceResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:temporal.api.workflowservice.v1.UpdateNamespaceResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
   * @return Whether the namespaceInfo field is set.
   */
  boolean hasNamespaceInfo();
  /**
   * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
   * @return The namespaceInfo.
   */
  io.temporal.api.namespace.v1.NamespaceInfo getNamespaceInfo();
  /**
   * <code>.temporal.api.namespace.v1.NamespaceInfo namespace_info = 1;</code>
   */
  io.temporal.api.namespace.v1.NamespaceInfoOrBuilder getNamespaceInfoOrBuilder();

  /**
   * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
   * @return The config.
   */
  io.temporal.api.namespace.v1.NamespaceConfig getConfig();
  /**
   * <code>.temporal.api.namespace.v1.NamespaceConfig config = 2;</code>
   */
  io.temporal.api.namespace.v1.NamespaceConfigOrBuilder getConfigOrBuilder();

  /**
   * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
   * @return Whether the replicationConfig field is set.
   */
  boolean hasReplicationConfig();
  /**
   * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
   * @return The replicationConfig.
   */
  io.temporal.api.replication.v1.NamespaceReplicationConfig getReplicationConfig();
  /**
   * <code>.temporal.api.replication.v1.NamespaceReplicationConfig replication_config = 3;</code>
   */
  io.temporal.api.replication.v1.NamespaceReplicationConfigOrBuilder getReplicationConfigOrBuilder();

  /**
   * <code>int64 failover_version = 4;</code>
   * @return The failoverVersion.
   */
  long getFailoverVersion();

  /**
   * <code>bool is_global_namespace = 5;</code>
   * @return The isGlobalNamespace.
   */
  boolean getIsGlobalNamespace();
}
